[
    {
        "subject": "소프트웨어 설계",
        "question": "요구사항 검증(Requirements Validation)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "요구사항 검증 과정을 통해 모든 요구사항 문제를 발견 할 수 있다.",
        "incorrect_answers": ["요구사항이 고객이 정말 원하는 시스템을 제대로 정의하고 있는지 점검하는 과정이다.","개발완료 이후에 문제점이 발견될 경우 막대한 재작업 비용이 들 수 있기 때문에 요구사항 검증은 매우 중요하다.","요구사항이 실제 요구를 반영하는지, 문서상의 요구사항은 서로 상충되지 않는지 등을 점검한다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "UML 모델에서 한 사물의 명세가 바뀌면 다른사물에 영향을 주며, 일반적으로 한 클래스가다른 클래스를 오퍼레이션의 매개변수로 사용하는 경우에 나타나는 관계는?",
        "correct_answer": "Dependency",
        "incorrect_answers": ["Association","Realization","Generalization"],
        "desc": "연관 관계(Association Relationship), 의존 관계(Dependency Relationship), 실체화 관계(Realization Relationship), 일반화 관계(Generalization Relationship)",
        "keyword": "UML",
        "keyword_num": "31"
    },{
        "subject": "소프트웨어 설계",
        "question": "익스트림 프로그래밍(XP)에 대한 설명으로 틀린 것은?",
        "correct_answer": "빠른 개발을 위해 테스트를 수행하지 않는다.",
        "incorrect_answers": ["사용자의 요구사항은 언제든지 변할 수 있다.","고객과 직접 대면하며 요구사항을 이야기하기 위해 사용자 스토리(User Story)를 활용할 수 있다.","기존의 방법론에 비해 실용성(Pragmatism)을 강조한 것이라고 볼 수 있다."],
        "keyword": "XP",
        "keyword_num" : "8"
    },{
        "subject": "소프트웨어 설계",
        "question": "소프트웨어 설계에서 사용되는 대표적인 추상화(Abstraction) 기법이 아닌 것은?",
        "correct_answer": "강도 추상화",
        "incorrect_answers": ["자료 추상화","제어 추상화","과정 추상화"],
        "desc": "소프트웨어 설계에 사용되는 대표적인 3가지 추상화 기법<br>- 제어 추상화: 제어의 정확한 메커니즘을 정의하지 않고 원하는 효과를 정하는데 이용하는 방법<br>- 기능 추상화: 입력 자료를 출력자료로 변환하는 과정을 추상화하는 방법<br>- 자료 추상화: 자료와 자료에 적용될 수 있는 기능을 함께 정의함으로써 자료 객체를 구성하는 방법"
    },{
        "subject": "소프트웨어 설계",
        "question": "객체지향 설계에서 정보 은닉(Information Hiding)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "모듈 내부의 자료 구조와 접근 동작들에만 수정을 국한하기 때문에 요구사항 등변화에 따른 수정이 불가능하다.",
        "incorrect_answers": ["필요하지 않은 정보는 접근할 수 없도록 하여 한 모듈 또는 하부시스템이 다른 모듈의 구현에 영향을 받지 않게 설계되는것을 의미한다.","모듈들 사이의 독립성을 유지시키는 데 도움이 된다.","설계에서 은닉되어야 할 기본 정보로는 IP주소와 같은 물리적 코드, 상세 데이터 구조 등이 있다."]
    },{
        "subject": "소프트웨어 설계",
        "question": "소프트웨어 공학에서 모델링(Modeling)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "유지보수 단계에서만 모델링 기법을 활용한다.",
        "incorrect_answers": ["개발팀이 응용문제를 이해하는 데 도움을 줄 수 있다.","개발될 시스템에 대하여 여러 분야의 엔지니어들이 공통된 개념을 공유하는 데 도움을 준다.","절차적인 프로그램을 위한 자료흐름도는 프로세스 위주의 모델링 방법이다"],
        "desc": "유지보수는 개발에 마지막 단계에서 작업한다."
    },{
        "subject": "소프트웨어 설계",
        "question": "요구 분석(Requirement Analysis)에 대한 설명으로 틀린 것은?",
        "correct_answer": "기능적(Functional) 요구에서 시스템 구축에 대한 성능, 보안, 품질, 안정 등에 대한 요구사항을 도출한다.",
        "incorrect_answers": ["요구 분석은 소프트웨어 개발의 실제적인 첫 단계로 사용자의 요구에 대해 이해하는 단계라 할 수 있다.","요구 추출(Requirement Elicitation)은 프로젝트 계획 단계에 정의한 문제의 범위 안에 있는 사용자의 요구를 찾는 단계이다.","도메인 분석(Domain Analysis)은 요구에 대한 정보를 수집하고 배경을 분석하여 이를 토대로 모델링을 하게된다."],
        "desc": "기능적 요구사항<br>- 시스템이 수행해야 하는 행위들을 구체화 한 것<br>- 시스템에서 제공해야 할 기능을 정의한 것<br>- 입력기능, 출력기능, 데이터베이스 기능, 통신 기능 등<br>비기능적 요구사항<br>- 시스템이 가져야 하는 기능 이외의 요구사항<br>- 시스템의 전체적인 품질이나 고려해야 하는 제약사항 등<br>- 사용 용이성, 효율성, 신뢰성, 이식성, 유연성, 확장성 등<br>- 성능적인 면: 응답 속도, 자원 사용량 등<br>- 보안 측면: 침입 대응, 침입 탐지, 사용자 인증, 권한 부여 등",
        "keyword": "요구사항분석",
        "keyword_num": "35"
    },{
        "subject": "소프트웨어 설계",
        "question": "클래스 다이어그램의 요소로 다음 설명에 해당하는 용어는?",
        "question_desc": "- 클래스의 동작을 의미한다.<br>- 클래스에 속하는 객체에 대하여 적용될 메서드를 정의한 것이다.<br>- UML에서는 동작에 대한 인터페이스를 지칭한다고 볼 수 있다.",
        "correct_answer": "Operation",
        "incorrect_answers": ["Instance","Hiding","Item"]
    },{
        "subject": "소프트웨어 설계",
        "question": "분산 시스템을 위한 마스터-슬레이브(Master-Slave) 아키텍처에 대한 설명으로 틀린 것은?",
        "correct_answer": "슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다",
        "incorrect_answers": ["일반적으로 실시간 시스템에서 사용된다.","마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.","마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다"]
    },{
        "subject": "소프트웨어 설계",
        "question": "요구 사항 정의 및 분석·설계의 결과물을 표현하기 위한 모델링 과정에서 사용되는 다이어그램(Diagram)이 아닌 것은?",
        "correct_answer": "AVL Diagram",
        "incorrect_answers": ["Data Flow Diagram","UML Diagram","E-R Diagram"]
    },{
        "subject": "소프트웨어 설계",
        "question": "객체지향의 주요 개념에 대한 설명으로 틀린 것은?",
        "correct_answer": "캡슐화는 상위클래스에서 속성이나 연산을 전달받아 새로운 형태의 클래스로 확장하여 사용하는 것을 의미 한다.",
        "incorrect_answers": ["객체는 실세계에 존재하거나 생각할 수 있는 것을 말한다","클래스는 하나 이상의 유사한 객체들을 묶어 공통된 특성을 표현한 것이다.","다형성은 상속받은 여러 개의 하위 객체들이 다른 형태의 특성을 갖는 객체로 이용될 수 있는 성질이다."],
        "desc": "상속에 관한 설명이다.",
        "keyword": "객체지향",
        "keyword_num": "22"
    },{
        "subject": "소프트웨어 설계",
        "question": "사용자 인터페이스(User Interface)에 대한 설명으로 틀린 것은?",
        "correct_answer": "편리한 유지보수를 위해 개발자 중심으로 설계되어야 한다.",
        "incorrect_answers": ["사용자와 시스템이 정보를 주고받는 상호작용이 잘 이루어지도록 하는 장치나 소프트웨어를 의미한다.","배우기가 용이하고 쉽게 사용할 수 있도록 만들어져야 한다.","사용자 요구사항이 UI에 반영될 수 있도록 구성해야 한다."],
        "keyword": "UI",
        "keyword_num": "5"
    },{
        "subject": "소프트웨어 설계",
        "question": "GoF(Gang of Four) 디자인 패턴과 관련한 설명으로 틀린 것은?",
        "correct_answer": "Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다.",
        "incorrect_answers": ["디자인 패턴을 목적(Purpose)으로 분류할 때 생성, 구조, 행위로 분류할 수 있다.","행위 패턴은 클래스나 객체들이 상호작용하는 방법과 책임을 분산하는 방법을 정의한다.","Singleton 패턴은 특정 클래스의 인스턴스가 오직 하나임을 보장하고, 이 인스턴스에 대한 접근 방법을 제공한다."],
        "desc": "Strategy는 행위 패턴에 속한다.",
        "keyword": "디자인 패턴",
        "keyword_num": "24"
    },{
        "subject": "소프트웨어 설계",
        "question": "애자일 개발 방법론과 관련한 설명으로 틀린 것은?",
        "correct_answer": "정확한 결과 도출을 위해 계획 수립과 문서화에 중점을 둔다.",
        "incorrect_answers": ["빠른 릴리즈를 통해 문제점을 빠르게 파악할 수 있다.","고객과의 의사소통을 중요하게 생각한다.","진화하는 요구사항을 수용하는데 적합하다."],
        "keyword": "애자일 방법론",
        "keyword_num": "9"
    },{
        "subject": "소프트웨어 설계",
        "question": "럼바우(Rumbaugh)의 객체지향 분석 기법 중 자료 흐름도(DFD)를 주로 이용하는 것은?",
        "correct_answer": "기능 모델링",
        "incorrect_answers": ["동적 모델링","객체 모델링","정적 모델링"],
        "keyword": "객체지향 분석 방법론",
        "keyword_num": "23"
    },{
        "subject": "소프트웨어 설계",
        "question": "순차 다이어그램(Sequence Diagram)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "동적 다이어그램보다는 정적 다이어그램에 가깝다.",
        "incorrect_answers": ["객체들의 상호 작용을 나타내기 위해 사용한다.","시간의 흐름에 따라 객체들이 주고 받는 메시지의 전달 과정을 강조한다.","교류 다이어그램(Interaction Diagram)의 한 종류로 볼 수 있다."],
        "desc": "순차 다이어그램은 동적 다이어그램에 속한다.",
        "keyword": "UML",
        "keyword_num": "31"
    },{
        "subject": "소프트웨어 설계",
        "question": "객체지향 분석 기법과 관련한 설명으로 틀린것은?",
        "correct_answer": "기능 중심으로 시스템을 파악하며 순차적인처리가 중요시되는 하향식(Top-down)방식으로 볼 수 있다.",
        "incorrect_answers": ["동적 모델링 기법이 사용될 수 있다.","데이터와 행위를 하나로 묶어 객체를 정의내리고 추상화시키는 작업이라 할 수 있다.","코드 재사용에 의한 프로그램 생산성 향상 및 요구에 따른 시스템의 쉬운 변경이 가능하다."],
        "keyword": "객체지향 분석 방법론",
        "keyword_num": "23"
    },{
        "subject": "소프트웨어 설계",
        "question": "대표적으로 DOS 및 Unix 등의 운영체제에서 조작을 위해 사용하던 것으로, 정해진 명령문자열을 입력하여 시스템 조작하는 사용자인터페이스(User Interface)는?",
        "correct_answer": "CLI(Command Line Interface)",
        "incorrect_answers": ["GUI(Graphical User Interface)","CUI(Cell User Interface)","MUI(Mobile User Interface)"],
        "keyword": "UI",
        "keyword_num": "5"
    },{
        "subject": "소프트웨어 설계",
        "question": "분산 시스템에서의 미들웨어(Middleware)와 관련한 설명으로 틀린 것은?",
        "correct_answer": "애플리케이션과 사용자 사이에서만 분산서비스를 제공한다.",
        "incorrect_answers": ["분산 시스템에서 다양한 부분을 관리하고 통신하며 데이터를 교환하게 해주는 소프트웨어로 볼 수 있다.","위치 투명성(Location Transparency)을 제공한다.","분산 시스템의 여러 컴포넌트가 요구하는 재사용가능한 서비스의 구현을 제공한다."],
        "keyword": "미들웨어",
        "keyword_num": "34"
    },{
        "subject": "소프트웨어 설계",
        "question": "소프트웨어 아키텍처와 관련한 설명으로 틀린것은?",
        "correct_answer": "파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며, 필터 이동 시 오버헤드가 발생하지 않는다.",
        "incorrect_answers": ["외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼수 있다","데이터 중심 아키텍처는 공유 데이터저장소를 통해 접근자 간의 통신이 이루어지므로 각 접근자의 수정과 확장이 용이하다.","이해 관계자들의 품질 요구사항을 반영하여 품질 속성을 결정한다."]
    },
    {
        "subject": "소프트웨어 개발",
        "question": "테스트를 목적에 따라 분류했을 때, 강도(Stress) 테스트에 대한 설명으로 옳은것은?",
        "correct_answer": "시스템에 과다 정보량을 부과하여 과부하 시에도 시스템이 정상적으로 작동되는지를 테스트한다.",
        "incorrect_answers": ["시스템에 고의로 실패를 유도하고 시스템이정상적으로 복귀하는지 테스트한다","사용자의 이벤트에 시스템이 응답하는 시간, 특정 시간내에 처리하는 업무량, 사용자 요구에 시스템이 반응하는 속도 등을 테스트한다.","부당하고 불법적인 침입을 시도하여 보안시스템이 불법적인 침투를 잘 막아내는지 테스트한다."]
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 자료를 버블 정렬을 이용하여 오름차순으로 정렬할 경우 PASS 3의 결과는?",
        "question_desc": "9, 6, 7, 3, 5",
        "correct_answer": "3, 5, 6, 7, 9",
        "incorrect_answers": ["6, 3, 5, 7, 9","6, 7, 3, 5, 9","3, 5, 9, 6, 7"],
        "desc": "버블 정렬(Bubble Sort): 인접한 데이터를 비교하면서 데이터의 위치를 바꾸어 정렬하는 방법<br>Pass 1: 6 7 3 5 9<br>Pass 2: 6 3 5 7 9<br>Pass 3: 3 5 6 7 9",
        "keyword": "정렬",
        "keyword_num": "14"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 그래프에서 정점 A를 선택하여 깊이우선탐색(DFS)으로 운행한 결과는?",
        "question_img": "gisa2021_03_01",
        "correct_answer": "ABEFGCD",
        "incorrect_answers": ["ABECDFG","ABECFDG","ABCDEFG"]
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 설명에 부합하는 용어로 옳은 것은?",
        "question_desc": "- 소프트웨어 구조를 이루며, 다른 것들과 구별 될 수 있는 독립적인 기능을 갖는 단위이다.<br>- 하나 또는 몇 개의 논리적인 기능을 수행하기 위한 명령어들의 집합이라고도 할 수 있다.<br>- 서로 모여 하나의 완전한 프로그램으로 만들어 질 수 있다.",
        "correct_answer": "모듈",
        "incorrect_answers": ["통합 프로그램","저장소","데이터"]
    },{
        "subject": "소프트웨어 개발",
        "question": "테스트 드라이버(Test Driver)에 대한 설명으로 틀린 것은?",
        "correct_answer": "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.",
        "incorrect_answers": ["시험대상 모듈을 호출하는 간이 소프트웨어이다.","필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.","상향식 통합 테스트에서 사용된다."],
        "desc": "테스트 대상 모듈이 호출하는 하위 모듈의 역할은 테스트 스텁(Stub)이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 중 선형 구조로만 묶인 것은?",
        "correct_answer": "큐, 데크",
        "incorrect_answers": ["스택, 트리","큐, 그래프","리스트, 그래프"],
        "desc": "선형구조: 리스트, 스택, 큐, 데크<br>비선형구조: 트리, 그래프<br>파일구조: 순차파일, 색인파일, 직접파일",
        "keyword": "자료 구조",
        "keyword_num": "13"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음은 스택의 자료 삭제 알고리즘이다. ⓐ에 들어 갈 내용으로 옳은 것은? (단, Top: 스택포인터, S: 스택의 이름)",
        "question_img": "gisa2021_03_02", 
        "correct_answer": "Underflow",
        "incorrect_answers": ["Overflow","Top = Top + 1"," Top = Top"],
        "desc": "Overflow(오버플로우) : 스택 공간이 가득찼을 때 하나의 데이터를 더 넣으려고 하는 경우, 스택 오버플로우가 일어나고 프로그램에 오류 야기<br>Underflow(언더플로우) : 스택 공간에 데이터가 없는데 프로그램에서 스택에서 데이터를 꺼내려고 하는 경우, 스택 언더플로우가 일어나며 프로그램에 오류를 야기"
    },{
        "subject": "소프트웨어 개발",
        "question": "제품 소프트웨어의 사용자 매뉴얼 작성절차로 (가)~(다)와 [보기]의 기호를 바르게 연결한 것은?",
        "question_img": "gisa2021_03_03",
        "correct_answer": "(가)-㉢, (나)-㉡, (다)-㉠",
        "incorrect_answers": ["(가)-㉠, (나)-㉡, (다)-㉢","(가)-㉠, (나)-㉢, (다)-㉡","(가)-㉢, (나)-㉠, (다)-㉡"]
    },{
        "subject": "소프트웨어 개발",
        "question": "순서가 A, B, C, D로 정해진 입력 자료를 스택에 입력한 후 출력한 결과로 불가능한 것은?",
        "correct_answer": "D, B, C, A",
        "incorrect_answers": ["D, C, B, A","B, C, D, A","C, B, A, D"],
        "desc": "D, C, B, A : A push - B push - C push - D push - D pop - C pop - B pop - A pop<br>B, C, D, A : A push - B push - B pop - C push - C pop - D push - D pop - A pop<br>C, B, A, D : A push - B push - C push - C pop - B pop - A pop - D push - D pop",
        "keyword": "자료구조",
        "keyword_num": "13"
    },{
        "subject": "소프트웨어 개발",
        "question": "소프트웨어 테스트에서 검증(Verification)과 확인(Validation)에 대한 설명으로 틀린 것은?",
        "correct_answer": "검증은 작업 제품이 사용자의 요구에 적합한지 측정하며, 확인은 작업 제품이 개발자의 기대를 충족시키는지를 측정한다",
        "incorrect_answers": ["소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다","검증은 소프트웨어 개발 과정을 테스트하는 것이고, 확인은 소프트웨어 결과를 테스트 하는 것이다","검증은 작업 제품이 요구 명세의 기능, 비기능 요구사항을 얼마나 잘 준수하는지 측정하는 작업이다"],
        "desc": "검증(Verification): 소프트웨어가 요구사항에 부합하게 구현되었음을 보장하는 활동<br>확인(Validation): 소프트웨어가 고객의 의도에 따라 구현되었음을 보장하는 활동"
    },{
        "subject": "소프트웨어 개발",
        "question": "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주요 목적인 테스트는?",
        "correct_answer": "단위 테스트(Unit Test)",
        "incorrect_answers": ["통합 테스트(Integration Test)","시스템 테스트(System Test)","인수 테스트(Acceptance Test)"]
    },{
        "subject": "소프트웨어 개발",
        "question": "형상 관리의 개념과 절차에 대한 설명으로 틀린 것은?",
        "correct_answer": "형상 통제 과정에서는 형상 목록의 변경 요구를 즉시 수용 및 반영해야 한다.",
        "incorrect_answers": ["형상 식별은 형상 관리 계획을 근거로 형상관리의 대상이 무엇인지 식별하는 과정이다.","형상 관리를 통해 가시성과 추적성을 보장함으로써 소프트웨어의 생산성과 품질을 높일 수 있다.","형상 감사는 형상 관리 계획대로 형상관리가 진행되고 있는지, 형상 항목의 변경이 요구 사항에 맞도록 제대로 이뤄졌는지 등을 살펴보는 활동이다."],
        "keyword": "형상관리",
        "keyword_num": "39"
    },{
        "subject": "소프트웨어 개발",
        "question": "소스코드 정적 분석(Static Analysis)에 대한 설명으로 틀린 것은?",
        "correct_answer": "하드웨어적인 방법으로만 코드 분석이 가능하다.",
        "incorrect_answers": ["소스 코드를 실행시키지 않고 분석한다.","코드에 있는 오류나 잠재적인 오류를 찾아내기 위한 활동이다","자료 흐름이나 논리 흐름을 분석하여 비정상적인 패턴을 찾을 수 있다"],
        "desc": "소스코드 정적 분석은 프로그램을 실행 시키지 않고 코드를 분석하는 방법이며, 코드 내에 존재하는 보안 취약점, 잠재적 결함, 위험 등을 발견하고 규칙과 흐름에 맞게 코드가 올바르게 작성되어 있는지 점검하는 것이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "소프트웨어 개발 활동을 수행함에 있어서 시스템이 고장(Failure)을 일으키게 하며, 오류(Error)가 있는 경우 발생하는 것은?",
        "correct_answer": "Fault",
        "incorrect_answers": ["Testcase","Mistake","Inspection"],
        "desc": "오류(Error) : 결함의 원인이 되는 것으로, 일반적으로 휴먼 에러에 의해 생성되는 실수<br>결함(Defect), 결점(Fault), 버그(Bug) : 오류가 원인이 되어 제품에 포함되는 완전하지 못한 부분<br>실패(Failure), 문제(Problem) : 결함에 의해 의도하지 않은 결과가 발생하는 것"
    },{
        "subject": "소프트웨어 개발",
        "question": "코드의 간결성을 유지하기 위해 사용되는 지침으로 틀린 것은?",
        "correct_answer": "한 줄에 최대한 많은 문장을 코딩한다.",
        "incorrect_answers": ["공백을 이용하여 실행문 그룹과 주석을 명확히 구분한다","복잡한 논리식과 산술식은 괄호와 들여쓰기(Indentation)를 통해 명확히 표현한다.","빈 줄을 사용하여 선언부와 구현부를 구별한다"]
    },{
        "subject": "소프트웨어 개발",
        "question": "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?",
        "correct_answer": "Portability",
        "incorrect_answers": ["Efficiency","Usability","Correctness"],
        "desc": "이식성(Portability): 다양한 하드웨어 환경에서도 운용 가능 하도록 쉽게 수정될 수 있는 능력<br>효율성(Efficiency): 최소의 작업으로 요구되는 기능을 수행하는 정도<br>사용 용이성(Usability): 소프트웨어를 쉽게 사용할 수 있는 정도<br>정확성(Correctness): 사용자의 요구사항을 충족시키는 정도"
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 중 최악의 경우 검색 효율이 가장 나쁜트리 구조는?",
        "correct_answer": "이진 탐색트리",
        "incorrect_answers": ["AVL 트리","2-3 트리","레드-블랙 트리"],
        "desc": "이진 탐색 트리의 시간 복잡도는 O(logN), 최악의 시간복잡도는 O(N)이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "다음 트리에 대한 중위 순회 운행 결과는?",
        "question_img": "gisa2021_03_04",
        "correct_answer": "DBAECF",
        "incorrect_answers": ["ABDCEF","ABCDEF","DBECFA"]
    },{
        "subject": "소프트웨어 개발",
        "question": "테스트 케이스 자동 생성 도구를 이용하여 테스트 데이터를 찾아내는 방법이 아닌 것은?",
        "correct_answer": "스터브(Stub)와 드라이버(Driver)",
        "incorrect_answers": ["입력 도메인 분석","랜덤(Random) 테스트","자료 흐름도"],
        "desc": "스터브(Stub)와 드라이버(Driver)는 상향식/하향식 테스트를 위한 모듈이다."
    },{
        "subject": "소프트웨어 개발",
        "question": "저작권 관리 구성 요소 중 패키저(Packager)의 주요 역할로 옳은 것은?",
        "correct_answer": "콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는다",
        "incorrect_answers": ["콘텐츠를 제공하는 저작권자를 의미한다.","라이선스를 발급하고 관리한다.","배포된 콘텐츠의 이용 권한을 통제한다."]
    },{
        "subject": "데이터베이스 구축",
        "question": "데이터베이스의 무결성 규정(Integrity Rule)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "정식으로 허가 받은 사용자가 아닌 불법적인 사용자에 의한 갱신으로부터 데이터베이스를 보호하기 위한 규정이다.",
        "incorrect_answers": ["무결성 규정에는 데이터가 만족해야 될 제약 조건, 규정을 참조할 때 사용하는 식별자 등의 요소가 포함될 수 있다.","무결성 규정의 대상으로는 도메인, 키, 종속성 등이 있다.","릴레이션 무결성 규정(Relation Integrity Rules)은 릴레이 션을 조작하는 과정에서의 의미적 관계(Semantic Relationship)을 명세한 것이다."],
        "keyword": "무결성",
        "keyword_num": "33"
    },{
        "subject": "데이터베이스 구축",
        "question": "데이터베이스에서 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미하는 것은?",
        "correct_answer": "트랜잭션",
        "incorrect_answers": ["뷰","튜플","카디널리티"],
        "keyword": "트랜잭션",
        "keyword_num": "29"
    },{
        "subject": "데이터베이스 구축",
        "question": "다음 두 릴레이션 Rl과 R2의 카티션 프로덕트(cartesianproduct) 수행 결과는?",
        "question_img": "gisa2021_03_05",
        "correct_answer": "4",
        "incorrect_answers": ["1","2","3"],
        "keyword": "릴레이션",
        "keyword_num": "30"
    },{
        "subject": "데이터베이스 구축",
        "question": "물리적 데이터베이스 설계에 대한 설명으로 거리가 먼 것은?",
        "correct_answer": "트랜잭션의 인터페이스를 설계하며, 데이터 타입 및 데이터 타입들 간의 관계로 표현한다.",
        "incorrect_answers": ["물리적 설계의 목적은 효율적인 방법으로 데이터를 저장하는 것이다.","트랜잭션 처리량과 응답시간, 디스크 용량 등을 고려해야 한다.","저장 레코드의 형식, 순서, 접근 경로와 같은 정보를 사용하여 설계한다."],
        "desc": "논리적 설계에 대한 설명이다."
    },{
        "subject": "데이터베이스 구축",
        "question": "다음 중 기본키는 NULL 값을 가져서는 안되며, 릴레이션 내에 오직 하나의 값만 존재해야 한다는 조건을 무엇이라 하는가?",
        "correct_answer": "개체 무결성 제약조건",
        "incorrect_answers": ["참조 무결성 제약조건","도메인 무결성 제약조건","속성 무결성 제약조건"],
        "keyword": "무결성",
        "keyword_num": "33"
    },{
        "subject": "데이터베이스 구축",
        "question": "SQL문에서 HAVING을 사용할 수 있는 절은?",
        "correct_answer": "GROUP BY 절",
        "incorrect_answers": ["LIKE 절","WHERE 절","ORDER BY 절"]
    },{
        "subject": "데이터베이스 구축",
        "question": "관계 데이터베이스에 있어서 관계 대수 연산이 아닌 것은?",
        "correct_answer": "포크(Fork)",
        "incorrect_answers": ["디비전(Division)","프로젝트(Project)","조인(Join)"]
    },{
        "subject": "데이터베이스 구축",
        "question": "학적 테이블에서 전화번호가 Null값이 아닌 학생명을 모두 검색할 때, SQL 구문으로 옳은 것은?",
        "correct_answer": "SELECT 학생명 FROM 학적 WHERE 전화번호 IS NOT NULL; ",
        "incorrect_answers": ["SELECT FROM 07 WHERE 전화번호 DON'T NULL;","SELECT FROM WHERE 전화번호 != NOT NULL;","SELECT FROM WHERE 전화번호 IS NULL;"]
    },{
        "subject": "데이터베이스 구축",
        "question": "관계형 데이터베이스에서 다음 설명에 해당하는 키(Key)는?",
        "question_desc": "한 릴레이션 내의 속성들의 집합으로 구성된 키로서, 릴레이션을 구성하는 모든 튜플에 대한 유일성을 만족시키지만 최소성은 만족시키지 못한다.",
        "correct_answer": "슈퍼키",
        "incorrect_answers": ["후보키","대체키","외래키"]
    },{
        "subject": "데이터베이스 구축",
        "question": "데이터베이스에서 인덱스(Index)와 관련한 설명으로 틀린 것은?",
        "correct_answer": "시스템이 자동으로 생성하여 사용자가 변경할 수 없다",
        "incorrect_answers": ["인덱스의 기본 목적은 검색 성능을 최적화하는 것으로 볼 수 있다.","B-트리 인덱스는 분기를 목적으로 하는 Branch Block을 가지고 있다.","BETWEEN 등 범위(Range) 검색에 활용될 수 있다"]
    },{
        "subject": "데이터베이스 구축",
        "question": "로킹 단위(Locking Granularity)에 대한 설명으로 옳은 것은?",
        "correct_answer": "로킹 단위가 크면 병행성 수준이 낮아진다.",
        "incorrect_answers": ["로킹 단위가 크면 병행 제어 기법이 복잡해진다.","로킹 단위가 작으면 로크(lock)의 수가 적어진다.","로킹은 파일 단위로 이루어지며, 레코드와 필드는 로킹 단위가 될 수 없다."],
        "keyword": "로킹",
        "keyword_num": "40"
    },{
        "subject": "데이터베이스 구축",
        "question": "관계 대수에 대한 설명으로 틀린 것은?",
        "correct_answer": "원하는 릴레이션을 정의하는 방법을 제공하며 비절차적 언어이다.",
        "incorrect_answers": ["릴레이션 조작을 위한 연산의 집합으로 피연산자와 결과가 모두 릴레이션이다.","일반 집합 연산과 순수 관계 연산으로 구분된다.","질의에 대한 해를 구하기 위해 수행해야 할 연산의 순서를 명시한다."],
        "desc": "관계 대수는 절차적 언어이며, 이에 대응하는 비절차적 언어는 관계 해석이다."
    },{
        "subject": "데이터베이스 구축",
        "question": "데이터의 중복으로 인하여 관계연산을 처리할 때 예기치 못한 곤란한 현상이 발생하는 것을 무엇이라 하는가?",
        "correct_answer": "이상(Anomaly)",
        "incorrect_answers": ["제한(Restriction)","종속성(Dependency)","변환(Translation)"],
        "keyword": "정규화",
        "keyword_num": "19"
    },{
        "subject": "데이터베이스 구축",
        "question": "다음 중 SQL에서의 DDL 문이 아닌 것은?",
        "correct_answer": "DELETE",
        "incorrect_answers": ["CREATE","ALTER","DROP"],
        "desc": "DDL(데이터 정의어): CREATE, ALTER, DROP<br>DML(데이터 조작어): SELECT, INSERT, UPDATE, DELETE<br>DCL(데이터 제어어): GRANT, REVOKE, COMMIT, ROLLBACK",
        "keyword": "SQL 명령어",
        "keyword_num": "20"
    },{
        "subject": "데이터베이스 구축",
        "question": "정규화에 대한 설명으로 적절하지 않은 것은?",
        "correct_answer": "데이터베이스의 개념적 설계 단계 이전에 수행한다.",
        "incorrect_answers": ["데이터 구조의 안정성을 최대화한다.","중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 방지한다.","데이터 삽입 시 릴레이션을 재구성할 필요성을 줄인다."],
        "keyword": "정규화",
        "keyword_num": "19"
    },{
        "subject": "데이터베이스 구축",
        "question": "트랜잭션의 주요 특성 중 하나로 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음을 의미하는 것은?",
        "correct_answer": "Isolation",
        "incorrect_answers": ["Log","Consistency","Durability"],
        "keyword": "트랜잭션",
        "keyword_num": "29"
    },{
        "subject": "데이터베이스 구축",
        "question": "SQL의 논리 연산자가 아닌 것은?",
        "correct_answer": "OTHER",
        "incorrect_answers": ["AND","OR","NOT"]
    },{
        "subject": "데이터베이스 구축",
        "question": "동시성 제어를 위한 직렬화 기법으로 트랜잭션 간의 처리순서를 미리 정하는 방법은?",
        "correct_answer": "타임스탬프 기법",
        "incorrect_answers": ["로킹 기법","검증 기법","배타 로크 기법"],
        "keyword": "트랜잭션",
        "keyword_num": "29"
    },{
        "subject": "데이터베이스 구축",
        "question": "이전 단계의 정규형을 만족하면서 후보키를 통하지 않는 조인 종속(JD : Join Dependency) 제거해야 만족하는 정규형은?",
        "correct_answer": "제5정규형",
        "incorrect_answers": ["제4정규형","제3정규형","제6정규형"],
        "keyword": "정규화",
        "keyword_num": "19"
    },{
        "subject": "데이터베이스 구축",
        "question": "어떤 릴레이션 R에서 X와 Y를 각각 R의 애트리뷰트 집합의 부분 집합이라고 할 경우 애트리뷰트 X의 값 각각에 대해 시간에 관계없이 항상 애트리뷰트 Y의 값이 오직 하나만 연관되어 있을 때 Y는 X에 함수 종속이라고 한다. 이 함수 종속의 표기로 옳은 것은?",
        "correct_answer": "X → Y",
        "incorrect_answers": ["Y → X","Y ⊂ X","X ⊂ Y"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "모듈 내 구성 요소들이 서로 다른 기능을 같은 시간대에 함께 실행하는 경우의 응집도(Cohesion)는?",
        "correct_answer": "Temporal Cohesion",
        "incorrect_answers": ["Logical Cohesion","Coincidental Cohesion","Sequential Cohesion"],
        "keyword": "응집도",
        "keyword_num": "12"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "오류 제어에 사용되는 자동반복 요청방식(ARQ)이 아닌 것은?",
        "correct_answer": "Non-Acknowledge ARQ",
        "incorrect_answers": ["Stop-and-wait ARQ","Go-back-N ARQ","Selective-Repeat ARQ"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 파이썬(Python) 프로그램이 실행되었을 때의 결과는?",
        "question_img": "gisa2021_03_06",
        "correct_answer": "66",
        "incorrect_answers": ["45","55","78"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 C언어 프로그램이 실행되었을 때의 결과는?",
        "question_img": "gisa2021_03_07",
        "correct_answer": "nationalter",
        "incorrect_answers": ["nation","alternation","alter"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "JAVA에서 힙(Heap)에 남아있으나 변수가 가지고 있던 참조값을 잃거나 변수 자체가 없어짐으로써 더 이상 사용되지 않는 객체를 제거해주는 역할을 하는 모듈은?",
        "correct_answer": "Garbage Collector",
        "incorrect_answers": ["Heap Collector","Memory Collector","Variable Collector"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 C언어 프로그램이 실행되었을 때의 결과는?",
        "question_img": "gisa2021_03_08",
        "correct_answer": "3",
        "incorrect_answers": ["0","1","2"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 중 JAVA에서 우선순위가 가장 낮은 연산자는?",
        "correct_answer": "=",
        "incorrect_answers": ["--","%","&"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "사용자가 요청한 디스크 입·출력 내용이 다음과 같은 순서로 큐에 들어 있을 때 SSTF 스케쥴링을 사용한 경우의 처리 순서는? (단, 현재 헤드 위치는 53 이고, 제일 안쪽이 1번, 바깥쪽이 200번 트랙이다.)",
        "question_desc": "큐의 내용 : 98, 183, 37, 122, 14, 124, 65, 67",
        "correct_answer": "53-65-67-37-14-98-122-124-183",
        "incorrect_answers": ["53-98-183-37-122-14-124-65-67","53-37-14-65-67-98-122-124-183","53-67-65-124-14-122-37-183-98"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "192.168.1.0/24 네트워크를 FLSM 방식을 이용하여 4개의 Subnet으로 나누고 IP Subnet-zero를 적용했다. 이때 Subnetting 된 네트워크 중 4번째 네트워크의 4번째 사용가능한 IP는 무엇인가?",
        "correct_answer": "192.168.1.196",
        "incorrect_answers": ["192.168.1.192","192.168.1.195","192.168.1.198"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "C Class에 속하는 IP address는?",
        "correct_answer": "200.168.30.1",
        "incorrect_answers": ["10.3.2.1 4","172.16.98.3","225.2.4.1"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 C언어 프로그램이 실행되었을 때의 결과는?",
        "question_img": "gisa2021_03_09",
        "correct_answer": "8",
        "incorrect_answers": ["0","4","12"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "귀도 반 로섬(Guido van Rossum)이 발표한 언어로 인터프리터 방식이자 객체지향적이며, 배우기 쉽고 이식성이 좋은 것이 특징인 스크립트 언어는?",
        "correct_answer": "Python",
        "incorrect_answers": ["JAVA","C++","C#"]
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 JAVA 프로그램이 실행되었을 때의 결과를 쓰시오.",
        "question_img": "gisa2021_03_10",
        "correct_answer": "34",
        "incorrect_answers": ["13","21","55"],
        "desc": "arr[0] = 0, arr[1] = 1<br>arr[2] = arr[1] + arr[0] = 1 + 0 = 1<br>arr[3] = arr[2] + arr[1] = 1 + 1 = 2<br>arr[4] = arr[3] + arr[2] = 2 + 1 = 3<br>arr[5] = arr[4] + arr[3] = 3 + 2 = 5<br>arr[6] = arr[5] + arr[4] = 5 + 3 = 8<br>arr[7] = arr[6] + arr[5] = 8 + 5 = 13<br>arr[8] = arr[7] + arr[6] = 13 + 8 = 21<br>arr[9] = arr[8] + arr[7] = 21 + 13 = 34"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "프로세스와 관련한 설명으로 틀린 것은?",
        "correct_answer": "프로세스는 스레드(Thread) 내에서 실행되는 흐름의 단위이며, 스레드와 달리 주소 공간에 실행 스택(Stack)이 없다.",
        "incorrect_answers": ["프로세스가 준비 상태에서 프로세서가 배당되어 실행 상태로 변화하는 것을 디스패치(Dispatch)라고 한다","프로세스 제어 블록(PCB, Process Control Block)은 프로세스 식별자, 프로세스 상태 등의 정보로 구성된다.","이전 프로세스의 상태 레지스터 내용을 보관하고 다른 프로세스의 레지스터를 적재하는 과정을 문맥 교환(Context Switching)이라고 한다."],
        "desc": "프로세스의 실행 단위가 스레드이다."
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "모듈의 독립성을 높이기 위한 결합도(Coupling)와 관련한 설명으로 틀린 것은?",
        "correct_answer": "모듈들이 변수를 공유하여 사용하게 하거나 제어 정보를 교류하게 함으로써 결합도를 낮추어야 한다.",
        "incorrect_answers": ["오류가 발생했을 때 전파되어 다른 오류의 원인이 되는 파문 효과(Ripple Effect)를 최소화해야 한다.","인터페이스가 정확히 설정되어 있지 않을 경우 불필요한 인터페이스가 나타나 모듈 사이의 의존도는 높아지고 결합도가 증가한다.","다른 모듈과 데이터 교류가 필요한 경우 전역변수(Global Variable)보다는 매개변수(Parameter)를 사용하는 것이 결합도를 낮추는 데 도움이 된다."],
        "keyword": "결합도",
        "keyword_num": "12"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "TCP헤더와 관련한 설명으로 틀린 것은?",
        "correct_answer": "윈도우 크기는 송수신 측의 버퍼 크기로 최대 크기는 32767bit이다.",
        "incorrect_answers": ["순서번호(Sequence Number)는 전달하는 바이트마다 번호가 부여된다","수신번호확인(Acknowledgement Number)은 상대편 호스트에서 받으려는 바이트의 번호를 정의한다.","체크섬(Checksum)은 데이터를 포함한 세그먼트의 오류를 검사한다."],
        "desc": "TCP 최대 수신 버퍼 크기(16bit) : 65535byte"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "모듈화(Modularity)와 관련한 설명으로 틀린 것은?",
        "correct_answer": "모듈의 수가 증가하면 상대적으로 각 모듈의 크기가 커지며, 모듈 사이의 상호교류가 감소하여 과부하(Overload) 현상이 나타난다.",
        "incorrect_answers": ["소프트웨어의 모듈은 프로그래밍 언어에서 Subroutine, Function 등으로 표현될 수 있다.","모듈화는 시스템을 지능적으로 관리할 수 있도록 해주며, 복잡도 문제를 해결하는 데 도움을 준다.","모듈화는 시스템의 유지보수와 수정을 용이하게 한다."],
        "keyword": "모듈화",
        "keyword_num": "41"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "다음 중 페이지 교체(Page Replacement) 알고리즘이 아닌 것은?",
        "correct_answer": "LUF(Least Used First)",
        "incorrect_answers": ["FIFO(First-In-First-Out)","Optimal","LRU(Least Recently Used)"],
        "keyword": "페이지 교체 알고리즘"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "C언어에서의 변수 선언으로 틀린 것은?",
        "correct_answer": "int else;",
        "incorrect_answers": ["int Test2;","int pc;","int True;"],
        "keyword": "C언어",
        "keyword_num": "42"
    },{
        "subject": "프로그래밍 언어 활용",
        "question": "파일 디스크립터(File Descriptor)에 대한 설명으로 틀린 것은?",
        "correct_answer": "사용자가 파일 디스크립터를 직접 참조할 수 있다.",
        "incorrect_answers": ["파일 관리를 위해 시스템이 필요로 하는 정보를 가지고 있다.","보조기억장치에 저장되어 있다가 파일이 개방(open)되면 주기억장치로 이동된다","파일 제어 블록(File Control Block)이라고도 한다."]
    },{
        "subject": "정보시스템 구축관리",
        "question": "침입탐지 시스템(IDS : Intrusion Detection System)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "이상 탐지 기법(Anomaly Detection)은 Signature Base나 Knowledge Base라고도 불리며 이미 발견되고 정립된 공격 패턴을 입력해두었다가 탐지 및 차단한다.",
        "incorrect_answers": ["HIDS(Host-Based Intrusion Detection)는 운영체제에 설정된 사용자 계정에 따라 어떤 사용자가 어떤 접근을 시도하고 어떤 작업을 했는지에 대한 기록을 남기고 추적한다","NIDS(Network-Based Intrusion Detection System)로는 대표적으로 Snort가 있다.","외부 인터넷에 서비스를 제공하는 서버가 위치하는 네트워크인 DMZ(Demilitarized Zone)에는 IDS가 설치될 수 있다"],
        "desc": "Knowledge Base : 알려진 패턴 기반 탐지 = 오용 탐지<br>Statistical Detection : 기존 패턴의 통계와 다른 패턴을 탐지 = 이상 탐지"
    },{
        "subject": "정보시스템 구축관리",
        "question": "정보 시스템 내에서 어떤 주체가 특정 개체에 접근하려할 때 양쪽의 보안 레이블(Security Label)에 기초하여 높은 보안 수준을 요구하는 정보(객체)가 낮은 보안 수준의 주체에게 노출되지 않도록 하는 접근 제어 방법은?",
        "correct_answer": "Mandatory Access Control",
        "incorrect_answers": ["User Access Control","Discretionary Access Control","Data-Label Access Control"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "구글의 구글 브레인 팀이 제작하여 공개한 기계 학습(Machine Leaming)을 위한 오픈소스 소프트웨어 라이브러리는?",
        "correct_answer": "텐서플로(TensorFlow)",
        "incorrect_answers": ["타조(Tajo)","원 세그(One Seg)","포스퀘어(Foursquare)"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "국내 IT 서비스 경쟁력 강화를 목표로 개발되었으며 인프라 제어 및 관리 환경, 실행 환경, 개발 환경, 서비스 환경, 운영환경으로 구성되어 있는 개방형 클라우드 컴퓨팅 플랫폼은?",
        "correct_answer": "PaaS-TA",
        "incorrect_answers": ["N20S","KAWS","Metaverse"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "정보 보안을 위한 접근 제어(Access Control)과 관련한 설명으로 틀린 것은?",
        "correct_answer": "DBMS에 보안 정책을 적용하는 도구인 XDMCP를 통해 데이터베이스에 대한 접근제어를 수행할 수 있다",
        "incorrect_answers": ["적절한 권한을 가진 인가자만 특정 시스템이나 정보에 접근할 수 있도록 통제하는 것이다.","시스템 및 네트워크에 대한 접근 제어의 가장 기본적인 수단은 IP와 서비스 포트로 볼 수 있다.","네트워크 장비에서 수행하는 IP에 대한 접근 제어로는 관리 인터페이스의 접근제어와 ACL(Access Control List) 등 있다."],
        "desc": "XDMCP(X Display Manager Control Protocol) : 원격 데스크톱 프로토콜, 디스플레이 메니저에 의해 원격지의 컴퓨터를 제어 할 수 있다."
    },{
        "subject": "정보시스템 구축관리",
        "question": "소프트웨어 개발 프레임워크와 관련한 설명으로 틀린 것은?",
        "correct_answer": "라이브러리와 달리 사용자 코드가 직접호출하여 사용하기 때문에 소프트웨어 개발프레임워크가 직접 코드의 흐름을 제어할수 없다",
        "incorrect_answers": ["반제품 상태의 제품을 토대로 도메인별로 필요한 서비스 컴포넌트를 사용하여 재사용성 확대와 성능을 보장 받을 수 있게하는 개발 소프트웨어이다.","개발해야 할 애플리케이션의 일부분이 이미구현되어 있어 동일한 로직 반복을 줄일 수 있다.","생산성 향상과 유지보수성 향상 등의 장점이 있다."]
    },{
        "subject": "정보시스템 구축관리",
        "question": "물리적 배치와 상관없이 논리적으로 LAN을구성하여 Broadcast Domain을 구분할 수있게 해주는 기술로 접속된 장비들의 성능향상 및 보안성 증대 효과가 있는 것은?",
        "correct_answer": "VLAN",
        "incorrect_answers": ["STP","L2AN","ARP"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "SQL Injection 공격과 관련한 설명으로 틀린것은?",
        "correct_answer": "DBMS의 종류와 관계없이 SQL Injection공격 기법은 모두 동일하다.",
        "incorrect_answers": ["SQL Injection은 임의로 작성한 SQL 구문을 애플리케이션에 삽입하는 공격방식이다"," SQL Injection 취약점이 발생하는 곳은 주로웹 애플리케이션과 데이터베이스가 연동되는 부분이다.","로그인과 같이 웹에서 사용자의 입력 값을 받아 데이터베이스 SQL문으로 데이터를요청하는 경우 SQL Injection을 수행할 수 있다"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "비대칭 암호화 방식으로 소수를 활용한 암호화 알고리즘은?",
        "correct_answer": "RSA",
        "incorrect_answers": ["DES","SMT","AES"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "다음에서 설명하는 IT 스토리지 기술은?",
        "question_desc": "- 가상화를 적용하며 필요한 공간만큼 나눠 사용할 수 있도록 하며 서버 가상화와 유사함<br>- 컴퓨터 소프트웨어로 구정하는 데이터 스토리지 체계이며, 일정 조직 내 여러 스토리지를 하나처럼 관리하고 운용하는 컴퓨터 이용 환경<br>- 스토리지 자원을 효율적으로 나누어 쓰는 방법으로 이해할 수 있음",
        "correct_answer": "Software Defined Storage",
        "incorrect_answers": ["Distribution Oriented Storage","Network Architected Storage","Systematic Network Storage"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "Cocomo model 중 기관 내부에서 개발된 중소규모의 소프트웨어로 일괄 자료 처리나 과학기술계산용, 비즈니스 자료 처리용으로 5만 라인이하의 소프트웨어를 개발하는 유형은?",
        "correct_answer": "Organic",
        "incorrect_answers": ["Embeded","Semi-detached","Semi-embeded"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "다음 내용이 설명하는 것은?",
        "question_desc": "개인과 기업, 국가적으로 큰 위협이되고 있는 주요 사이버 범죄 중 하나로 Snake, Darkside 등 시스템을 잠그거나 데이터를 암호화해 사용 할 수 없도록 하고 이를 인질로 금전을 요구하는데 사용되는 악성 프로르램",
        "correct_answer": "Ransomware",
        "incorrect_answers": ["Format String","Buffer overflow","Adware"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "생명주기 모형 중 가장 오래된 모형으로 많은적용 사례가 있지만 요구사항의 변경이어렵고 각 단계의 결과가 확인 되어야 다음단계로 넘어갈 수 있는 선형 순차적, 고전적 생명 주기 모형이라고도 하는 것은?",
        "correct_answer": "Waterfall Model",
        "incorrect_answers": ["Prototype Model","Cocomo Model","Spiral Model"],
        "keyword": "소프트웨어 생명주기",
        "keyword_num": "37"
    },{
        "subject": "정보시스템 구축관리",
        "question": "소프트웨어 생명주기 모형 중 Spiral Model에 대한 설명으로 틀린 것은?",
        "correct_answer": "계획, 설계, 개발, 평가의 개발 주기가 한번만 수행된다.",
        "incorrect_answers": ["비교적 대규모 시스템에 적합하다.","개발 순서는 계획 및 정의, 위험 분석, 공학적 개발, 고객 평가 순으로 진행된다.","소프트웨어를 개발하면서 발생할 수 있는 위험을 관리하고 최소화하는 것을 목적으로 한다."],
        "keyword": "소프트웨어 생명주기",
        "keyword_num": "37"
    },{
        "subject": "정보시스템 구축관리",
        "question": "특정 사이트에 매우 많은 ICMP Echo를 보내면, 이에 대한 응답(Respond)을 하기 위해 시스템 자원을 모두 사용해버려 시스템이 정상적으로 동작하지 못하도록 하는 공격방법은?",
        "correct_answer": "Ping Flood",
        "incorrect_answers": ["Role-Based Access Control","Brute-Force","Trojan Horses"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "TCP/IP 기반 네트워크에서 동작하는 발행-구독 기반의 메시징 프로토콜로 최근 IoT 환경에서 자주 사용되고 있는 프로토콜은?",
        "correct_answer": "MQTT",
        "incorrect_answers": ["MLFQ","Zigbee","MTSP"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "시스템이 몇 대가 되어도 하나의 시스템에서 인증에 성공하면 다른 시스템에 대한 접근권한도 얻는 시스템을 의미하는 것은?",
        "correct_answer": "SSO",
        "incorrect_answers": ["SOS","SBO","SOA"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "시스템에 저장되는 패스워드들은 Hash 또는 암호화 알고리즘의 결과 값으로 저장된다. 이때 암호공격을 막기 위해 똑같은 패스워드들이 다른 암호 값으로 저장되도록 추가되는 값을 의미하는 것은?",
        "correct_answer": "Salt",
        "incorrect_answers": ["Pass flag","Bucket","Opcode"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "S/W 각 기능의 원시 코드 라인수의 비관치, 낙관치, 기대치를 측정하여 예측치를 구하고 이를 이용하여 비용을 산정하는 기법은?",
        "correct_answer": "LOC기법",
        "incorrect_answers": ["Effort Per Task기법","전문가 감정 기법","델파이기법"]
    },{
        "subject": "정보시스템 구축관리",
        "question": "오픈소스 웹 애플리케이션 보안 프로젝트로서 주로 웹을 통한 정보 유출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하는 곳은?",
        "correct_answer": "OWASP",
        "desc": "OWASP(Open Web Application Security Project)는 오픈소스 웹 애플리케이션 보안 프로젝트입니다.",
        "incorrect_answers": ["WWW","WBSEC","ITU"]
    }
]